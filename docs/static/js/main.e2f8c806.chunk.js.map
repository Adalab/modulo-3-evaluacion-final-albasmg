{"version":3,"sources":["assets/images/rickandmorty-logo.png","assets/images/rick.png","assets/images/morty.png","assets/images/not-found.png","assets/images/back.png","assets/images/pickle-rick.png","assets/images/portal.png","components/Header/Header.js","components/Filters/Filters.js","components/CharacterCard/CharacterCard.js","components/CharacterList/CharacterList.js","components/CharacterDetail/CharacterDetail.js","components/Loader/Loader.js","services/api.js","App.js","index.js"],"names":["module","exports","Header","to","className","src","rick","alt","headerLogo","morty","Filters","onSearchChange","onCheckboxChange","searcherValue","sortNameCheckbox","onSubmit","ev","preventDefault","type","value","onChange","target","checked","CharacterCard","image","name","specie","id","CharacterList","characters","length","map","species","key","notFound","CharacterDetail","status","origin","totalEpisodes","goBack","Loader","pickleRick","getDataFromApi","fetch","then","response","json","App","useState","setCharacters","setSearcherValue","setSortNameCheckbox","isLoading","setIsLoading","useEffect","results","exact","path","searchValue","filteredCharacters","filter","toLowerCase","includes","sort","prevCharacter","nextCharacter","prevCharacterName","nextCharacterName","getFilteredCharacters","render","props","routeCharacterId","parseInt","match","params","characterId","character","find","episode","portal","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.e2f8c806.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rickandmorty-logo.e743517e.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.7ff2f09f.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.a33cefa5.png\";","module.exports = __webpack_public_path__ + \"static/media/not-found.628ffaa4.png\";","module.exports = __webpack_public_path__ + \"static/media/back.a82fe8af.png\";","module.exports = __webpack_public_path__ + \"static/media/pickle-rick.92cbbdb2.png\";","module.exports = __webpack_public_path__ + \"static/media/portal.24278ae2.png\";","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport headerLogo from '../../assets/images/rickandmorty-logo.png';\nimport rick from '../../assets/images/rick.png';\nimport morty from '../../assets/images/morty.png';\n\nconst Header = () => {\n  return (\n    <Link to=\"/\">\n      <div className=\"header\">\n        <img src={rick} alt=\"morty\" className=\"header__icon\"></img>\n        <img\n          src={headerLogo}\n          alt=\"Rick and Morty logo\"\n          className=\"header__img\"\n        ></img>\n        <img src={morty} alt=\"morty\" className=\"header__icon\"></img>\n      </div>\n    </Link>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = ({\n  onSearchChange,\n  onCheckboxChange,\n  searcherValue,\n  sortNameCheckbox,\n}) => {\n  const handleInputChange = (ev) => onSearchChange(ev.target.value);\n\n  const handleInputSubmit = (ev) => ev.preventDefault();\n\n  const handleCheckboxChange = (ev) => onCheckboxChange(ev.target.checked);\n\n  return (\n    <div>\n      <form className=\"filter\" onSubmit={handleInputSubmit}>\n        <input\n          type=\"text\"\n          value={searcherValue}\n          onChange={handleInputChange}\n          className=\"filter__input\"\n        />\n        <label className=\"filter__sortLabel\">\n          <input\n            type=\"checkbox\"\n            checked={sortNameCheckbox}\n            className=\"filter__sort\"\n            onChange={handleCheckboxChange}\n          />\n          <span\n            className={\n              !sortNameCheckbox\n                ? 'filter__customSort'\n                : 'filter__customSortChecked'\n            }\n          ></span>\n          Sort by name\n        </label>\n      </form>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  onSearchChange: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = ({ image, name, specie, id }) => {\n  return (\n    <Link to={`/character/${id}`}>\n      <li>\n        <div className=\"character\">\n          <img src={image} alt={name} className=\"character__img\"></img>\n          <h2 className=\"character__name\">{name}</h2>\n          <p className=\"character__specie\">{specie}</p>\n        </div>\n      </li>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  specie: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../CharacterCard/CharacterCard';\nimport notFound from '../../assets/images/not-found.png';\n\nconst CharacterList = ({ characters, searcherValue }) => {\n  return (\n    <section>\n      <ul className=\"characters wrapper\">\n        {!characters.length ? (\n          <div className=\"characters__notFound\">\n            <h1 className=\"characters__notFoundHeading\">\n              There is not any character name that match the word\n              <span className=\"characters__notFoundHeading--search\">\n                {searcherValue}\n              </span>\n            </h1>\n            <img\n              src={notFound}\n              alt=\"Rick and Morty content not found\"\n              className=\"characters__notFoundImg\"\n            ></img>\n          </div>\n        ) : (\n          characters.map(({ id, image, name, species }) => (\n            <CharacterCard\n              key={id}\n              id={id}\n              image={image}\n              name={name}\n              specie={species}\n            />\n          ))\n        )}\n      </ul>\n    </section>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.array.isRequired,\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport goBack from '../../assets/images/back.png';\n\nconst CharacterDetail = ({\n  image,\n  name,\n  status,\n  specie,\n  origin,\n  totalEpisodes,\n}) => {\n  return (\n    <section>\n      <div className=\"detail\">\n        <img src={image} alt={name} className=\"detail__image\"></img>\n        <div className=\"detail__characterInfo\">\n          <h1 className=\"detail__name\">{name}</h1>\n          <div>\n            <p className=\"detail__info\">\n              Status: {status === 'Alive' ? '👽' : '💀'}\n            </p>\n            <p className=\"detail__info\">\n              Specie: <span>{specie}</span>\n            </p>\n            <p className=\"detail__info\">\n              Origin: <span>{origin}</span>\n            </p>\n            <p className=\"detail__info\">\n              Episodes: <span>{totalEpisodes}</span>\n            </p>\n          </div>\n        </div>\n      </div>\n      <Link to=\"/\">\n        <button className=\"detail__button\">\n          <img\n            src={goBack}\n            alt=\"Go back to all characters\"\n            className=\"detail__backIcon\"\n          />\n          Back to all characters\n        </button>\n      </Link>\n    </section>\n  );\n};\n\nCharacterDetail.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  specie: PropTypes.string.isRequired,\n  origin: PropTypes.string.isRequired,\n  totalEpisodes: PropTypes.number.isRequired,\n};\n\nexport default CharacterDetail;\n","import React from 'react';\nimport pickleRick from '../../assets/images/pickle-rick.png';\n\nconst Loader = () => {\n  return (\n    <div className=\"loader\">\n      <p className=\"loader__text\">Loading...</p>\n      <img src={pickleRick} alt=\"Loader\" className=\"loader__img\"></img>\n    </div>\n  );\n};\n\nexport default Loader;\n","const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/').then((response) =>\n    response.json()\n  );\n};\n\nexport default getDataFromApi;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Filters from './components/Filters/Filters';\nimport CharacterList from './components/CharacterList/CharacterList';\nimport CharacterDetail from './components/CharacterDetail/CharacterDetail';\nimport Loader from './components/Loader/Loader';\nimport getDataFromApi from './services/api';\nimport portal from './assets/images/portal.png';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searcherValue, setSearcherValue] = useState('');\n  const [sortNameCheckbox, setSortNameCheckbox] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    getDataFromApi().then(({ results }) => {\n      setCharacters(results);\n      setIsLoading(false);\n    });\n  }, []);\n\n  const handleSearchChange = (searchValue) => setSearcherValue(searchValue);\n\n  const handleNameSortCheckbox = (sortNameCheckbox) =>\n    setSortNameCheckbox(sortNameCheckbox);\n\n  const getFilteredCharacters = () => {\n    const filteredCharacters = characters.filter(({ name }) =>\n      name.toLowerCase().includes(searcherValue.toLowerCase())\n    );\n\n    if (sortNameCheckbox) {\n      return filteredCharacters.sort((prevCharacter, nextCharacter) => {\n        const prevCharacterName = prevCharacter.name.toLowerCase();\n        const nextCharacterName = nextCharacter.name.toLowerCase();\n        return prevCharacterName < nextCharacterName\n          ? -1\n          : prevCharacterName > nextCharacterName\n          ? 1\n          : 0;\n      });\n    }\n\n    return filteredCharacters;\n  };\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const character = characters.find(({ id }) => id === routeCharacterId);\n\n    if (character) {\n      return (\n        <CharacterDetail\n          image={character.image}\n          name={character.name}\n          status={character.status}\n          specie={character.species}\n          origin={character.origin.name}\n          totalEpisodes={character.episode.length}\n        />\n      );\n    } else {\n      return (\n        <div className=\"urlNotFound\">\n          <p className=\"urlNotFound__text\">\n            This character has not been found, you can go back to{' '}\n            <Link to=\"/\">\n              <span>all characters</span>!\n            </Link>\n          </p>\n          <img src={portal} alt=\"Hole\" className=\"urlNotFound__img\"></img>\n        </div>\n      );\n    }\n  };\n\n  if (isLoading) return <Loader />;\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters\n            onSearchChange={handleSearchChange}\n            onCheckboxChange={handleNameSortCheckbox}\n            searcherValue={searcherValue}\n            sortNameCheckbox={sortNameCheckbox}\n          />\n          <CharacterList\n            characters={getFilteredCharacters()}\n            searcherValue={searcherValue}\n          />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './assets/stylesheets/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}