{"version":3,"sources":["assets/images/rickandmorty-logo.png","assets/images/rick.png","assets/images/morty.png","components/Header/Header.js","components/Filters/Filters.js","components/CharacterCard/CharacterCard.js","components/CharacterList/CharacterList.js","components/CharacterDetail/CharacterDetail.js","services/api.js","App.js","index.js"],"names":["module","exports","Header","className","src","rick","alt","headerLogo","morty","Filters","onSearchChange","type","onChange","ev","target","value","CharacterCard","image","name","specie","id","to","CharacterList","characters","map","species","key","CharacterDetail","status","origin","totalEpisodes","class","getDataFromApi","fetch","then","response","json","App","useState","setCharacters","searcherValue","setSearcherValue","useEffect","results","exact","path","searchValue","filter","toLowerCase","includes","render","props","routeCharacterId","parseInt","match","params","characterId","character","find","episode","length","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.b275c763.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rickandmorty-logo.e743517e.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.7ff2f09f.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.a33cefa5.png\";","import React from 'react';\nimport headerLogo from '../../assets/images/rickandmorty-logo.png';\nimport rick from '../../assets/images/rick.png';\nimport morty from '../../assets/images/morty.png';\nimport './_header.scss';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <img src={rick} alt=\"morty\" className=\"header__icon\"></img>\n      <img\n        src={headerLogo}\n        alt=\"Rick and Morty logo\"\n        className=\"header__img\"\n      ></img>\n      <img src={morty} alt=\"morty\" className=\"header__icon\"></img>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = ({ onSearchChange }) => {\n  const handleInputChange = (ev) => onSearchChange(ev.target.value);\n\n  return (\n    <div>\n      <form className=\"filter\">\n        <input\n          type=\"text\"\n          onChange={handleInputChange}\n          className=\"filter__input\"\n        ></input>\n      </form>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  onSearchChange: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = ({ image, name, specie, id }) => {\n  return (\n    <Link to={`/character/${id}`}>\n      <li>\n        <div className=\"character\">\n          <img src={image} alt={name} className=\"character__img\"></img>\n          <h2 className=\"character__name\">{name}</h2>\n          <p className=\"character__specie\">{specie}</p>\n        </div>\n      </li>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  specie: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../CharacterCard/CharacterCard';\nimport './_characterList.scss';\n\nconst CharacterList = ({ characters }) => {\n  return (\n    <section>\n      <ul className=\"characters\">\n        {characters.map(({ id, image, name, species }) => (\n          <CharacterCard\n            key={id}\n            id={id}\n            image={image}\n            name={name}\n            specie={species}\n          />\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.array.isRequired,\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = ({\n  image,\n  name,\n  status,\n  specie,\n  origin,\n  totalEpisodes,\n}) => {\n  return (\n    <section>\n      <Link to=\"/\">\n        <button class=\"detail__button\">Back to characters</button>\n      </Link>\n      <div className=\"detail\">\n        <img src={image} alt={name} className=\"detail__image\"></img>\n        <div className=\"detail__data\">\n          <h1 className=\"detail__name\">{name}</h1>\n          <p className=\"detail__status\">\n            Status: {status === 'Alive' ? 'ðŸ‘½' : 'ðŸ’€'}\n          </p>\n          <p className=\"detail__specie\">Specie: {specie}</p>\n          <p className=\"detail__origin\">Origin: {origin}</p>\n          <p className=\"detail__episodes\">Episodes: {totalEpisodes}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nCharacterDetail.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  specie: PropTypes.string.isRequired,\n  origin: PropTypes.string.isRequired,\n  totalEpisodes: PropTypes.number.isRequired,\n};\n\nexport default CharacterDetail;\n","const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/').then((response) =>\n    response.json()\n  );\n};\n\nexport default getDataFromApi;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Filters from './components/Filters/Filters';\nimport CharacterList from './components/CharacterList/CharacterList';\nimport CharacterDetail from './components/CharacterDetail/CharacterDetail';\nimport getDataFromApi from './services/api';\nimport './App.css';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searcherValue, setSearcherValue] = useState('');\n\n  useEffect(() => {\n    getDataFromApi().then(({ results }) => setCharacters(results));\n  }, []);\n\n  const handleSearchChange = (searchValue) => setSearcherValue(searchValue);\n\n  const getFilteredCharacters = () =>\n    characters.filter(({ name }) =>\n      name.toLowerCase().includes(searcherValue.toLowerCase())\n    );\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const character = characters.find(({ id }) => id === routeCharacterId);\n\n    if (character) {\n      return (\n        <CharacterDetail\n          image={character.image}\n          name={character.name}\n          status={character.status}\n          specie={character.species}\n          origin={character.origin.name}\n          totalEpisodes={character.episode.length}\n        />\n      );\n    } else {\n      return <p>Este personaje no se ha encontrado</p>;\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters onSearchChange={handleSearchChange} />\n          <CharacterList characters={getFilteredCharacters()} />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './assets/stylesheets/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}