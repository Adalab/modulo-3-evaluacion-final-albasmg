{"version":3,"sources":["assets/images/rickandmorty-logo.png","assets/images/rick.png","assets/images/morty.png","assets/images/not-found.png","components/Header/Header.js","components/Filters/Filters.js","components/CharacterCard/CharacterCard.js","components/CharacterList/CharacterList.js","components/CharacterDetail/CharacterDetail.js","services/api.js","App.js","index.js"],"names":["module","exports","Header","className","src","rick","alt","headerLogo","morty","Filters","onSearchChange","onCheckboxChange","searcherValue","sortNameCheckbox","onSubmit","ev","preventDefault","type","value","onChange","target","checked","CharacterCard","image","name","specie","id","to","CharacterList","characters","length","map","species","key","notFound","CharacterDetail","status","origin","totalEpisodes","class","getDataFromApi","fetch","then","response","json","App","useState","setCharacters","setSearcherValue","setSortNameCheckbox","useEffect","results","exact","path","searchValue","filteredCharacters","filter","toLowerCase","includes","sort","prevCharacter","nextCharacter","prevCharacterName","nextCharacterName","getFilteredCharacters","render","props","routeCharacterId","parseInt","match","params","characterId","character","find","episode","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.1f7b2f29.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/rickandmorty-logo.e743517e.png\";","module.exports = __webpack_public_path__ + \"static/media/rick.7ff2f09f.png\";","module.exports = __webpack_public_path__ + \"static/media/morty.a33cefa5.png\";","module.exports = __webpack_public_path__ + \"static/media/not-found.628ffaa4.png\";","import React from 'react';\nimport headerLogo from '../../assets/images/rickandmorty-logo.png';\nimport rick from '../../assets/images/rick.png';\nimport morty from '../../assets/images/morty.png';\n\nconst Header = () => {\n  return (\n    <div className=\"header\">\n      <img src={rick} alt=\"morty\" className=\"header__icon\"></img>\n      <img\n        src={headerLogo}\n        alt=\"Rick and Morty logo\"\n        className=\"header__img\"\n      ></img>\n      <img src={morty} alt=\"morty\" className=\"header__icon\"></img>\n    </div>\n  );\n};\n\nexport default Header;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Filters = ({\n  onSearchChange,\n  onCheckboxChange,\n  searcherValue,\n  sortNameCheckbox,\n}) => {\n  const handleInputChange = (ev) => onSearchChange(ev.target.value);\n\n  const handleInputSubmit = (ev) => ev.preventDefault();\n\n  const handleCheckboxChange = (ev) => onCheckboxChange(ev.target.checked);\n\n  return (\n    <div>\n      <form className=\"filter\" onSubmit={handleInputSubmit}>\n        <input\n          type=\"text\"\n          value={searcherValue}\n          onChange={handleInputChange}\n          className=\"filter__input\"\n        />\n        <label className=\"filter__sortLabel\">\n          <input\n            type=\"checkbox\"\n            checked={sortNameCheckbox}\n            className=\"filter__sort\"\n            onChange={handleCheckboxChange}\n          />\n          <span\n            className={\n              !sortNameCheckbox\n                ? 'filter__customSort'\n                : 'filter__customSortChecked'\n            }\n          ></span>\n          Sort by name\n        </label>\n      </form>\n    </div>\n  );\n};\n\nFilters.propTypes = {\n  onSearchChange: PropTypes.func.isRequired,\n};\n\nexport default Filters;\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nconst CharacterCard = ({ image, name, specie, id }) => {\n  return (\n    <Link to={`/character/${id}`}>\n      <li>\n        <div className=\"character\">\n          <img src={image} alt={name} className=\"character__img\"></img>\n          <h2 className=\"character__name\">{name}</h2>\n          <p className=\"character__specie\">{specie}</p>\n        </div>\n      </li>\n    </Link>\n  );\n};\n\nCharacterCard.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  specie: PropTypes.string.isRequired,\n};\n\nexport default CharacterCard;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CharacterCard from '../CharacterCard/CharacterCard';\nimport notFound from '../../assets/images/not-found.png';\n\nconst CharacterList = ({ characters, searcherValue }) => {\n  return (\n    <section>\n      <ul className=\"characters wrapper\">\n        {!characters.length ? (\n          <div className=\"characters__notFound\">\n            <h1 className=\"characters__notFoundHeading\">\n              No hay ningun personaje que coincida con la palabra\n              <span className=\"characters__notFoundHeading--search\">\n                {searcherValue}\n              </span>\n            </h1>\n            <img\n              src={notFound}\n              alt=\"Rick and Morty content not found\"\n              className=\"characters__notFoundImg\"\n            ></img>\n          </div>\n        ) : (\n          characters.map(({ id, image, name, species }) => (\n            <CharacterCard\n              key={id}\n              id={id}\n              image={image}\n              name={name}\n              specie={species}\n            />\n          ))\n        )}\n      </ul>\n    </section>\n  );\n};\n\nCharacterList.propTypes = {\n  characters: PropTypes.array.isRequired,\n};\n\nexport default CharacterList;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nconst CharacterDetail = ({\n  image,\n  name,\n  status,\n  specie,\n  origin,\n  totalEpisodes,\n}) => {\n  return (\n    <section>\n      <Link to=\"/\">\n        <button class=\"detail__button\">Back to characters</button>\n      </Link>\n      <div className=\"detail\">\n        <img src={image} alt={name} className=\"detail__image\"></img>\n        <div className=\"detail__data\">\n          <h1 className=\"detail__name\">{name}</h1>\n          <p className=\"detail__status\">\n            Status: {status === 'Alive' ? 'ðŸ‘½' : 'ðŸ’€'}\n          </p>\n          <p className=\"detail__specie\">Specie: {specie}</p>\n          <p className=\"detail__origin\">Origin: {origin}</p>\n          <p className=\"detail__episodes\">Episodes: {totalEpisodes}</p>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nCharacterDetail.propTypes = {\n  image: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  status: PropTypes.string.isRequired,\n  specie: PropTypes.string.isRequired,\n  origin: PropTypes.string.isRequired,\n  totalEpisodes: PropTypes.number.isRequired,\n};\n\nexport default CharacterDetail;\n","const getDataFromApi = () => {\n  return fetch('https://rickandmortyapi.com/api/character/').then((response) =>\n    response.json()\n  );\n};\n\nexport default getDataFromApi;\n","import React, { useState, useEffect } from 'react';\nimport { Route, Switch, Link } from 'react-router-dom';\nimport Header from './components/Header/Header';\nimport Filters from './components/Filters/Filters';\nimport CharacterList from './components/CharacterList/CharacterList';\nimport CharacterDetail from './components/CharacterDetail/CharacterDetail';\nimport getDataFromApi from './services/api';\n\nconst App = () => {\n  const [characters, setCharacters] = useState([]);\n  const [searcherValue, setSearcherValue] = useState('');\n  const [sortNameCheckbox, setSortNameCheckbox] = useState(false);\n\n  useEffect(() => {\n    getDataFromApi().then(({ results }) => setCharacters(results));\n  }, []);\n\n  const handleSearchChange = (searchValue) => setSearcherValue(searchValue);\n\n  const handleNameSortCheckbox = (sortNameCheckbox) =>\n    setSortNameCheckbox(sortNameCheckbox);\n\n  const getFilteredCharacters = () => {\n    const filteredCharacters = characters.filter(({ name }) =>\n      name.toLowerCase().includes(searcherValue.toLowerCase())\n    );\n\n    if (sortNameCheckbox) {\n      return filteredCharacters.sort((prevCharacter, nextCharacter) => {\n        const prevCharacterName = prevCharacter.name.toLowerCase();\n        const nextCharacterName = nextCharacter.name.toLowerCase();\n        return prevCharacterName < nextCharacterName\n          ? -1\n          : prevCharacterName > nextCharacterName\n          ? 1\n          : 0;\n      });\n    }\n\n    return filteredCharacters;\n  };\n\n  const renderCharacterDetail = (props) => {\n    const routeCharacterId = parseInt(props.match.params.characterId);\n    const character = characters.find(({ id }) => id === routeCharacterId);\n\n    if (character) {\n      return (\n        <CharacterDetail\n          image={character.image}\n          name={character.name}\n          status={character.status}\n          specie={character.species}\n          origin={character.origin.name}\n          totalEpisodes={character.episode.length}\n        />\n      );\n    } else {\n      return (\n        <p className=\"urlNotFoundText\">\n          Este personaje no se ha encontrado, puedes volver a{' '}\n          <Link to=\"/\">\n            <span>el listado incial</span>\n          </Link>{' '}\n          para ver el resto.\n        </p>\n      );\n    }\n  };\n\n  return (\n    <>\n      <Header />\n      <Switch>\n        <Route exact path=\"/\">\n          <Filters\n            onSearchChange={handleSearchChange}\n            onCheckboxChange={handleNameSortCheckbox}\n            searcherValue={searcherValue}\n            sortNameCheckbox={sortNameCheckbox}\n          />\n          <CharacterList\n            characters={getFilteredCharacters()}\n            searcherValue={searcherValue}\n          />\n        </Route>\n        <Route path=\"/character/:characterId\" render={renderCharacterDetail} />\n      </Switch>\n    </>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from 'react-router-dom';\n\nimport './assets/stylesheets/index.scss';\nimport App from './App';\n\nReactDOM.render(\n  <HashRouter>\n    <App />\n  </HashRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}